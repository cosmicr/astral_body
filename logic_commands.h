#ifndef LOGIC_COMMANDS_H
#define LOGIC_COMMANDS_H
/*
    Logic commands implementation for the LOGIC game code
*/
#include <stdint.h>
#include <stdbool.h>

void command_00_return(uint16_t* offset);
void command_01_increment(uint16_t* offset);
void command_02_decrement(uint16_t* offset);
void command_03_assignn(uint16_t* offset);
void command_04_assignv(uint16_t* offset);
void command_05_addn(uint16_t* offset);
void command_06_addv(uint16_t* offset);
void command_07_subn(uint16_t* offset);
void command_08_subv(uint16_t* offset);
void command_09_lindirectv(uint16_t* offset);
void command_0a_rindirect(uint16_t* offset);
void command_0b_lindirectn(uint16_t* offset);
void command_0c_set(uint16_t* offset);
void command_0d_reset(uint16_t* offset);
void command_0e_toggle(uint16_t* offset);
void command_0f_set_v(uint16_t* offset);
void command_10_reset_v(uint16_t* offset);
void command_11_toggle_v(uint16_t* offset);
void command_12_new_room(uint16_t* offset);
void command_13_new_room_v(uint16_t* offset);
void command_14_load_logics(uint16_t* offset);
void command_15_load_logics_v(uint16_t* offset);
void command_16_call(uint16_t* offset);
void command_17_call_v(uint16_t* offset);
void command_18_load_pic(uint16_t* offset);
void command_19_draw_pic(uint16_t* offset);
void command_1a_show_pic(uint16_t* offset);
void command_1b_discard_pic(uint16_t* offset);
void command_1c_overlay_pic(uint16_t* offset);
void command_1d_show_pri_screen(uint16_t* offset);
void command_1e_load_view(uint16_t* offset);
void command_1f_load_view_v(uint16_t* offset);
void command_20_discard_view(uint16_t* offset);
void command_21_animate_obj(uint16_t* offset);
void command_22_unanimate_all(uint16_t* offset);
void command_23_draw(uint16_t* offset);
void command_24_erase(uint16_t* offset);
void command_25_position(uint16_t* offset);
void command_26_position_v(uint16_t* offset);
void command_27_get_posn(uint16_t* offset);
void command_28_reposition(uint16_t* offset);
void command_29_set_view(uint16_t* offset);
void command_2a_set_view_v(uint16_t* offset);
void command_2b_set_loop(uint16_t* offset);
void command_2c_set_loop_v(uint16_t* offset);
void command_2d_fix_loop(uint16_t* offset);
void command_2e_release_loop(uint16_t* offset);
void command_2f_set_cel(uint16_t* offset);
void command_30_set_cel_v(uint16_t* offset);
void command_31_last_cel(uint16_t* offset);
void command_32_current_cel(uint16_t* offset);
void command_33_current_loop(uint16_t* offset);
void command_34_current_view(uint16_t* offset);
void command_35_number_of_loops(uint16_t* offset);
void command_36_set_priority(uint16_t* offset);
void command_37_set_priority_v(uint16_t* offset);
void command_38_release_priority(uint16_t* offset);
void command_39_get_priority(uint16_t* offset);
void command_3a_stop_update(uint16_t* offset);
void command_3b_start_update(uint16_t* offset);
void command_3c_force_update(uint16_t* offset);
void command_3d_ignore_horizon(uint16_t* offset);
void command_3e_observe_horizon(uint16_t* offset);
void command_3f_set_horizon(uint16_t* offset);
void command_40_object_on_water(uint16_t* offset);
void command_41_object_on_land(uint16_t* offset);
void command_42_object_on_anything(uint16_t* offset);
void command_43_ignore_objs(uint16_t* offset);
void command_44_observe_objs(uint16_t* offset);
void command_45_distance(uint16_t* offset);
void command_46_stop_cycling(uint16_t* offset);
void command_47_start_cycling(uint16_t* offset);
void command_48_normal_cycle(uint16_t* offset);
void command_49_end_of_loop(uint16_t* offset);
void command_4a_reverse_cycle(uint16_t* offset);
void command_4b_reverse_loop(uint16_t* offset);
void command_4c_cycle_time(uint16_t* offset);
void command_4d_stop_motion(uint16_t* offset);
void command_4e_start_motion(uint16_t* offset);
void command_4f_step_size(uint16_t* offset);
void command_50_step_time(uint16_t* offset);
void command_51_move_obj(uint16_t* offset);
void command_52_move_obj_v(uint16_t* offset);
void command_53_follow_ego(uint16_t* offset);
void command_54_wander(uint16_t* offset);
void command_55_normal_motion(uint16_t* offset);
void command_56_set_dir(uint16_t* offset);
void command_57_get_dir(uint16_t* offset);
void command_58_ignore_blocks(uint16_t* offset);
void command_59_observe_blocks(uint16_t* offset);
void command_5a_block(uint16_t* offset);
void command_5b_unblock(uint16_t* offset);
void command_5c_get(uint16_t* offset);
void command_5d_get_v(uint16_t* offset);
void command_5e_drop(uint16_t* offset);
void command_5f_put(uint16_t* offset);
void command_60_put_v(uint16_t* offset);
void command_61_get_room_v(uint16_t* offset);
void command_62_load_sound(uint16_t* offset);
void command_63_sound(uint16_t* offset);
void command_64_stop_sound(uint16_t* offset);
void command_65_print(uint16_t* offset);
void command_66_print_v(uint16_t* offset);
void command_67_display(uint16_t* offset);
void command_68_display_v(uint16_t* offset);
void command_69_clear_lines(uint16_t* offset);
void command_6a_text_screen(uint16_t* offset);
void command_6b_graphics(uint16_t* offset);
void command_6c_set_cursor_char(uint16_t* offset);
void command_6d_set_text_attribute(uint16_t* offset);
void command_6e_shake_screen(uint16_t* offset);
void command_6f_configure_screen(uint16_t* offset);
void command_70_status_line_on(uint16_t* offset);
void command_71_status_line_off(uint16_t* offset);
void command_72_set_string(uint16_t* offset);
void command_73_get_string(uint16_t* offset);
void command_74_word_to_string(uint16_t* offset);
void command_75_parse(uint16_t* offset);
void command_76_get_num(uint16_t* offset);
void command_77_prevent_input(uint16_t* offset);
void command_78_accept_input(uint16_t* offset);
void command_79_set_key(uint16_t* offset);
void command_7a_add_to_pic(uint16_t* offset);
void command_7b_add_to_pic_v(uint16_t* offset);
void command_7c_status(uint16_t* offset);
void command_7d_save_game(uint16_t* offset);
void command_7e_restore_game(uint16_t* offset);
void command_7f_init_disk(uint16_t* offset);
void command_80_restart_game(uint16_t* offset);
void command_81_show_obj(uint16_t* offset);
void command_82_random(uint16_t* offset);
void command_83_program_control(uint16_t* offset);
void command_84_player_control(uint16_t* offset);
void command_85_obj_status_v(uint16_t* offset);
void command_86_quit(uint16_t* offset);
void command_87_show_mem(uint16_t* offset);
void command_88_pause(uint16_t* offset);
void command_89_echo_line(uint16_t* offset);
void command_8a_cancel_line(uint16_t* offset);
void command_8b_init_joy(uint16_t* offset);
void command_8c_toggle_monitor(uint16_t* offset);
void command_8d_version(uint16_t* offset);
void command_8e_script_size(uint16_t* offset);
void command_8f_set_game_id(uint16_t* offset);
void command_90_log(uint16_t* offset);
void command_91_set_scan_start(uint16_t* offset);
void command_92_reset_scan_start(uint16_t* offset);
void command_93_reposition_to(uint16_t* offset);
void command_94_reposition_to_v(uint16_t* offset);
void command_95_trace_on(uint16_t* offset);
void command_96_trace_info(uint16_t* offset);
void command_97_print_at(uint16_t* offset);
void command_98_print_at_v(uint16_t* offset);
void command_99_discard_view_v(uint16_t* offset);
void command_9a_clear_text_rect(uint16_t* offset);
void command_9b_set_upper_left(uint16_t* offset);
void command_9c_set_menu(uint16_t* offset);
void command_9d_set_menu_item(uint16_t* offset);
void command_9e_submit_menu(uint16_t* offset);
void command_9f_enable_item(uint16_t* offset);
void command_a0_disable_item(uint16_t* offset);
void command_a1_menu_input(uint16_t* offset);
void command_a2_show_obj_v(uint16_t* offset);
void command_a3_open_dialogue(uint16_t* offset);
void command_a4_close_dialogue(uint16_t* offset);
void command_a5_mul_n(uint16_t* offset);
void command_a6_mul_v(uint16_t* offset);
void command_a7_div_n(uint16_t* offset);
void command_a8_div_v(uint16_t* offset);
void command_a9_close_window(uint16_t* offset);
void command_aa_set_simple(uint16_t* offset);
void command_ab_push_script(uint16_t* offset);
void command_ac_pop_script(uint16_t* offset);
void command_ad_hold_key(uint16_t* offset);
void command_ae_set_pri_base(uint16_t* offset);
void command_af_discard_sound(uint16_t* offset);
void command_b0_hide_mouse(uint16_t* offset);
void command_b1_allow_menu(uint16_t* offset);
void command_b2_show_mouse(uint16_t* offset);
void command_b3_fence_mouse(uint16_t* offset);
void command_b4_mouse_posn(uint16_t* offset);
void command_b5_release_key(uint16_t* offset);
void command_b6_adj_ego_move_to_x_y(uint16_t* offset);

#endif // LOGIC_TESTS_H